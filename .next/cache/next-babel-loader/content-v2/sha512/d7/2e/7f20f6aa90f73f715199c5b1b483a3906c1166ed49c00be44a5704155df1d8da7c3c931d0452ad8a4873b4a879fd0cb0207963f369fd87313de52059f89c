{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\react_js\\\\study\\\\23\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetUpId]\\\\index.js\";\n// domain/:meetUpId\nimport { MongoClient, ObjectID } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nconst MeetupDetailsPage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetails, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}; //hàm này chạy trước getStaticProps - dùng để xử lý tham số trên đường dẫn\n\n\nexport const getStaticPaths = async () => {\n  //kết nối mongo database\n  const client = await MongoClient.connect(\"mongodb+srv://tothanhtin12345:Anhyeuem123@cluster0.fe40c.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db(); //truy cập đến meetups document\n\n  const meetupsCollection = db.collection(\"meetups\"); //lấy mảng các meet up id để đặt vào paths\n\n  const meetupsId = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); // tham số thứ hai {_id:1} chỉ ra đối tượng muốn lấy từ tập dữ liệu\n\n  client.close();\n  return {\n    //nếu fallback: false thì chỉ trả về những giá trị tương ứng với key (tên file hoặc thư mục tham số) có giá trị trong paths\n    // ví dụ như domain/m1 => trong paths có meetUpId: 'm1' => trả về phần params chứa  meetUpId: 'm1 => ngược lại hiển thị một 404 page\n    //nếu fallback: true thì sẽ trả về giá trị mà người dùng nhập trên path\n    //ví dụ như domain/m1 => trả về luôn params: {meetUpId:'m1'} mà không cần quan tâm đến paths\n    // lưu ý tham số trả về luôn phải ở dạng params: { keyname(tương ứng với tên file hoặc tên thư mục tham số):giá trị }\n    //dùng fallback: false sẽ bảo mật hơn\n    fallback: false,\n    //dựa vào tham số trên đường dẫn - một đối tượng tham số tương ứng trong mảng paths sẽ được lấy ra và truyền cho hàm getStaticProps\n    //paths trong trường hợp này sẽ nhận dữ liệu csdl\n    paths: meetupsId.map(data => {\n      return {\n        params: {\n          meetUpId: data._id.toString()\n        }\n      };\n    }) // paths:[\n    //     {\n    //         params:{\n    //             //key giá trị phải trùng với tên file hoặc thư mục tham số\n    //             meetUpId: 'm1',\n    //         }\n    //     },\n    //     {\n    //         params:{\n    //             meetUpId: 'm2',\n    //         }\n    //     },\n    // ]\n\n  };\n}; //sử dụng getStaticProps vì project hiện tại không có chức năng thay đổi\n//bên cạnh đó thực tế thì meetup không thay đổi thường xuyên\n\nexport const getStaticProps = async context => {\n  //muốn lấy giá trị từ context.params thì trước hết phải có hàm getStaticPaths\n  const meetUpId = context.params.meetUpId;\n  console.log(meetUpId); //truy cập mongo để lấy chi tiết một id\n  //kết nối mongo database\n\n  const client = await MongoClient.connect(\"mongodb+srv://tothanhtin12345:Anhyeuem123@cluster0.fe40c.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db(); //truy cập đến meetups document\n\n  const meetupsCollection = db.collection(\"meetups\"); //lấy dữ liệu 1 meet up dựa vào id\n\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectID(meetUpId)\n  }, {\n    _id: 0\n  });\n  client.close();\n  console.log(meetup);\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n        image: meetup.image\n      }\n    }\n  };\n};\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["E:/react_js/study/23/06-onwards-to-a-bigger-project-starting-project/pages/[meetUpId]/index.js"],"names":["MongoClient","ObjectID","Fragment","Head","MeetupDetails","MeetupDetailsPage","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetupsId","find","_id","toArray","close","fallback","paths","map","data","params","meetUpId","toString","getStaticProps","context","console","log","meetup","findOne","id"],"mappings":"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","sourcesContent":["// domain/:meetUpId\r\nimport { MongoClient, ObjectID } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nconst MeetupDetailsPage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.meetupData.title}</title>\r\n        <meta name=\"description\" content={props.meetupData.description} />\r\n      </Head>\r\n      <MeetupDetails\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n//hàm này chạy trước getStaticProps - dùng để xử lý tham số trên đường dẫn\r\nexport const getStaticPaths = async () => {\r\n  //kết nối mongo database\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://tothanhtin12345:Anhyeuem123@cluster0.fe40c.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  //truy cập đến meetups document\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  //lấy mảng các meet up id để đặt vào paths\r\n  const meetupsId = await meetupsCollection.find({}, { _id: 1 }).toArray(); // tham số thứ hai {_id:1} chỉ ra đối tượng muốn lấy từ tập dữ liệu\r\n  client.close();\r\n  return {\r\n    //nếu fallback: false thì chỉ trả về những giá trị tương ứng với key (tên file hoặc thư mục tham số) có giá trị trong paths\r\n    // ví dụ như domain/m1 => trong paths có meetUpId: 'm1' => trả về phần params chứa  meetUpId: 'm1 => ngược lại hiển thị một 404 page\r\n    //nếu fallback: true thì sẽ trả về giá trị mà người dùng nhập trên path\r\n    //ví dụ như domain/m1 => trả về luôn params: {meetUpId:'m1'} mà không cần quan tâm đến paths\r\n    // lưu ý tham số trả về luôn phải ở dạng params: { keyname(tương ứng với tên file hoặc tên thư mục tham số):giá trị }\r\n    //dùng fallback: false sẽ bảo mật hơn\r\n    fallback: false,\r\n    //dựa vào tham số trên đường dẫn - một đối tượng tham số tương ứng trong mảng paths sẽ được lấy ra và truyền cho hàm getStaticProps\r\n    //paths trong trường hợp này sẽ nhận dữ liệu csdl\r\n    paths: meetupsId.map((data) => {\r\n      return {\r\n        params: {\r\n          meetUpId: data._id.toString(),\r\n        },\r\n      };\r\n    }),\r\n    // paths:[\r\n    //     {\r\n\r\n    //         params:{\r\n    //             //key giá trị phải trùng với tên file hoặc thư mục tham số\r\n    //             meetUpId: 'm1',\r\n    //         }\r\n    //     },\r\n    //     {\r\n    //         params:{\r\n    //             meetUpId: 'm2',\r\n    //         }\r\n    //     },\r\n\r\n    // ]\r\n  };\r\n};\r\n\r\n//sử dụng getStaticProps vì project hiện tại không có chức năng thay đổi\r\n//bên cạnh đó thực tế thì meetup không thay đổi thường xuyên\r\n\r\nexport const getStaticProps = async (context) => {\r\n  //muốn lấy giá trị từ context.params thì trước hết phải có hàm getStaticPaths\r\n  const meetUpId = context.params.meetUpId;\r\n  console.log(meetUpId);\r\n  //truy cập mongo để lấy chi tiết một id\r\n  //kết nối mongo database\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://tothanhtin12345:Anhyeuem123@cluster0.fe40c.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  //truy cập đến meetups document\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  //lấy dữ liệu 1 meet up dựa vào id\r\n  const meetup = await meetupsCollection.findOne(\r\n    { _id: ObjectID(meetUpId) },\r\n    { _id: 0 }\r\n  );\r\n  client.close();\r\n  console.log(meetup);\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetup._id.toString(),\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        description: meetup.description,\r\n        image: meetup.image,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetailsPage;\r\n"]},"metadata":{},"sourceType":"module"}