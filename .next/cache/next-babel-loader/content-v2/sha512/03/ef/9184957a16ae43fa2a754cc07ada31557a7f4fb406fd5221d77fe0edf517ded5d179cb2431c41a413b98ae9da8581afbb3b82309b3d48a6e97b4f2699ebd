{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// domain/\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport { useEffect, useState } from 'react';\nimport MeetupList from '../components/meetups/MeetupList'; //props là tham số nhận được từ hàm getStaticProps\n\nconst HomePage = props => {\n  console.log('ok');\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"React Meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Browse a huge list of highly active React meetups!\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n}; //hàm này sẽ chạy trước hàm render component - nó chạy trong suốt quá trình pre-render page\n//thích hợp để gọi api, lấy file, dữ liệu để hiển thị lên view trước khi mà nó được render ra hoàn toàn\n//dùng cái này ta sẽ tránh được việc dùng useEffect và useState,\n\n\nexport const getStaticProps = async () => {\n  //vì hàm này chỉ chạy trong quá trình build và khi deploy lên server\n  // không chạy ở phía người dùng\n  // nên ta gọi trực tiếp lấy dữ liệu từ mongo ở đây cũng được\n  const client = await MongoClient.connect('mongodb+srv://tothanhtin12345:Anhyeuem123@cluster0.fe40c.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups'); //tìm tất cả dữ liệu từ meetups document và biến chúng thành một mảng\n\n  const meetups = await meetupsCollection.find().toArray(); //đóng kết nối\n\n  client.close();\n  return {\n    props: {\n      //map dữ liệu lấy từ mongo\n      meetups: meetups.map(meetup => {\n        return {\n          id: meetup._id.toString(),\n          title: meetup.title,\n          address: meetup.address,\n          image: meetup.image\n        };\n      })\n    },\n    //thuộc tính reload lại page sau 1 giây\n    revalidate: 1\n  };\n}; //hàm này sẽ cũng tương tự getStaticProps\n//nhưng nó được chạy lại sau khi được deploy lên server\n// và mỗi có request đến server\n//context: là đối tượng chứa req, res của ngouiwf dùng\n// export const  getServerSideProps = async (context)=>{\n//     const req =context.req;\n//     const res = context.res;\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS,\n//         }\n//     }\n// }\n\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}